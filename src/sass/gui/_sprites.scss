/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-down-name: 'arrow-down';
$arrow-down-x: 60px;
$arrow-down-y: 34px;
$arrow-down-offset-x: -60px;
$arrow-down-offset-y: -34px;
$arrow-down-width: 34px;
$arrow-down-height: 17px;
$arrow-down-total-width: 101px;
$arrow-down-total-height: 94px;
$arrow-down-image: 'images/sprites.png';
$arrow-down: 60px 34px -60px -34px 34px 17px 101px 94px 'images/sprites.png' 'arrow-down';
$close-hl-name: 'close-hl';
$close-hl-x: 60px;
$close-hl-y: 0px;
$close-hl-offset-x: -60px;
$close-hl-offset-y: 0px;
$close-hl-width: 34px;
$close-hl-height: 34px;
$close-hl-total-width: 101px;
$close-hl-total-height: 94px;
$close-hl-image: 'images/sprites.png';
$close-hl: 60px 0px -60px 0px 34px 34px 101px 94px 'images/sprites.png' 'close-hl';
$close-name: 'close';
$close-x: 0px;
$close-y: 60px;
$close-offset-x: 0px;
$close-offset-y: -60px;
$close-width: 34px;
$close-height: 34px;
$close-total-width: 101px;
$close-total-height: 94px;
$close-image: 'images/sprites.png';
$close: 0px 60px 0px -60px 34px 34px 101px 94px 'images/sprites.png' 'close';
$divider-name: 'divider';
$divider-x: 62px;
$divider-y: 51px;
$divider-offset-x: -62px;
$divider-offset-y: -51px;
$divider-width: 39px;
$divider-height: 13px;
$divider-total-width: 101px;
$divider-total-height: 94px;
$divider-image: 'images/sprites.png';
$divider: 62px 51px -62px -51px 39px 13px 101px 94px 'images/sprites.png' 'divider';
$list-item-small-name: 'list-item-small';
$list-item-small-x: 34px;
$list-item-small-y: 83px;
$list-item-small-offset-x: -34px;
$list-item-small-offset-y: -83px;
$list-item-small-width: 6px;
$list-item-small-height: 6px;
$list-item-small-total-width: 101px;
$list-item-small-total-height: 94px;
$list-item-small-image: 'images/sprites.png';
$list-item-small: 34px 83px -34px -83px 6px 6px 101px 94px 'images/sprites.png' 'list-item-small';
$list-item-name: 'list-item';
$list-item-x: 62px;
$list-item-y: 64px;
$list-item-offset-x: -62px;
$list-item-offset-y: -64px;
$list-item-width: 10px;
$list-item-height: 11px;
$list-item-total-width: 101px;
$list-item-total-height: 94px;
$list-item-image: 'images/sprites.png';
$list-item: 62px 64px -62px -64px 10px 11px 101px 94px 'images/sprites.png' 'list-item';
$logo-name: 'logo';
$logo-x: 0px;
$logo-y: 0px;
$logo-offset-x: 0px;
$logo-offset-y: 0px;
$logo-width: 60px;
$logo-height: 60px;
$logo-total-width: 101px;
$logo-total-height: 94px;
$logo-image: 'images/sprites.png';
$logo: 0px 0px 0px 0px 60px 60px 101px 94px 'images/sprites.png' 'logo';
$mail-name: 'mail';
$mail-x: 34px;
$mail-y: 60px;
$mail-offset-x: -34px;
$mail-offset-y: -60px;
$mail-width: 28px;
$mail-height: 23px;
$mail-total-width: 101px;
$mail-total-height: 94px;
$mail-image: 'images/sprites.png';
$mail: 34px 60px -34px -60px 28px 23px 101px 94px 'images/sprites.png' 'mail';
$spritesheet-width: 101px;
$spritesheet-height: 94px;
$spritesheet-image: 'images/sprites.png';
$spritesheet-sprites: $arrow-down $close-hl $close $divider $list-item-small $list-item $logo $mail;
$spritesheet: 101px 94px 'images/sprites.png' $spritesheet-sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
